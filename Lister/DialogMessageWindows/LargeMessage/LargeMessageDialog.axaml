<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="368" d:DesignHeight="130"
        x:Class="View.DialogMessageWindows.LargeMessage.LargeMessageDialog"
		xmlns:views="clr-namespace:View.DialogMessageWindows.LargeMessage; assembly=View"
		xmlns:vm="clr-namespace:View.DialogMessageWindows.LargeMessage.ViewModel"
		Width="688"
		Height="{Binding  Path = WindowHeight,  Mode=OneWay }"
		WindowStartupLocation="CenterOwner"
		x:DataType="vm:LargeMessageViewModel"
		
		SystemDecorations="None">

	<UserControl
		Name="body"
		Width="688"
		Height="{Binding  Path = WindowHeight,  Mode=OneWay }"
		BorderBrush = "gray"
        BorderThickness = "1">
		
		<StackPanel>

			<Label
				Classes="modalLabel"
				Content ="Ошибка"/>

			<Grid
				Width="668">

				<Grid.ColumnDefinitions>
					<ColumnDefinition  Width="35"></ColumnDefinition>
					<ColumnDefinition  Width="{Binding  Path = MessageWidth,  Mode=OneWay }"></ColumnDefinition>
				</Grid.ColumnDefinitions>

				<Grid.RowDefinitions>
					<RowDefinition  Height="8"></RowDefinition>
					<RowDefinition  Height="{Binding  Path = MessageContainerHeight,  Mode=OneWay }"></RowDefinition>
				</Grid.RowDefinitions>

				<Image
					Grid.Column="0"
					Grid.Row="1"
					Width="35"
					Margin ="8,17"
					VerticalAlignment="Top"
					Source = "{Binding  Path = WarnImage,  Mode=OneWay }"/>

				<Grid
					Grid.Column="1"
					Grid.Row="1"
					Width="{Binding  Path = MessageContainerWidth,  Mode=OneWay }">
				
					<Grid.RowDefinitions>
						<RowDefinition  Height="35"></RowDefinition>
						<RowDefinition  Height="35"></RowDefinition>
						<RowDefinition  Height="8"></RowDefinition>
						<RowDefinition  Height="{Binding  Path = MessageContainerHeight,  Mode=OneWay }"></RowDefinition>
					</Grid.RowDefinitions>
				
					<Grid
						Grid.Row="0"
						Height="35">
					
						<Grid.ColumnDefinitions>
							<ColumnDefinition  Width="55"></ColumnDefinition>
							<ColumnDefinition  Width="370"></ColumnDefinition>
							<ColumnDefinition  Width="175"></ColumnDefinition>
						</Grid.ColumnDefinitions>

						<TextBlock
							Grid.Column="0"
							Height="35"
							FontSize="16"
							Padding="0,6"
							Text="Файл:"/>

						<TextBox
							Grid.Column="1"
							FontSize="16"
							BorderThickness="1"
							ScrollViewer.VerticalScrollBarVisibility="Disabled"
							IsReadOnly="True"
							Tapped="TappedPathForWholeSelection"
							Text="{Binding  Path = ErrorsSource,  Mode=OneWay }">

							<TextBox.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Копировать    (Ctrl+C)" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}"/>
								</ContextMenu>
							</TextBox.ContextMenu>
							
						</TextBox>
					
						<TextBlock
							Grid.Column="2"
							Height="35"
							FontSize="16"
							Padding="2,6"
							Text=" - содержит ошибки,"/>
					
					</Grid>
				
					<TextBlock
						Grid.Row="1"
						Height="35"
						FontSize="16"
						Padding="0,6"
						Text="макет будет построен с дефолтными значениями !"/>

					<ScrollViewer
						Width="592"
						Height="{Binding  Path = ErrorsContainerHeight,  Mode=OneWay }"
						HorizontalScrollBarVisibility="Auto"
						VerticalScrollBarVisibility="Auto"
						AllowAutoHide="False"
						BorderBrush="Gray"
						Grid.Row="3">

						<SelectableTextBlock
							Name="textArea"
							Width="{Binding  Path = MessageWidth,  Mode=OneWay }"
							Height="{Binding  Path = MessageHeight,  Mode=OneWay }"
							LineHeight="16"
							FontSize="12"
							HorizontalAlignment="Left"
							Focusable="True"
							SelectionBrush="#4aacfe"
							SelectionForegroundBrush="#fafafa"
							Tapped="TappedForWholeSelection"
							GotFocus="MessageGotFocus"
							Text ="{Binding  Path = Message,  Mode=OneWay}">

							<SelectableTextBlock.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Копировать    (Ctrl+C)" Command="{Binding $parent[SelectableTextBlock].Copy}" IsEnabled="{Binding $parent[SelectableTextBlock].CanCopy}"/>
								</ContextMenu>
							</SelectableTextBlock.ContextMenu>
							
						</SelectableTextBlock>

					</ScrollViewer>
				
				</Grid>
			
			</Grid>

			<Canvas
				Name ="Line"
				Width="686"
				Height="1"
				Margin ="0,0,0,0"
				Background ="#ececec"/>

			<Canvas
				Width="686"
				Height="51"
				Margin ="0,0,0,0"
				Background ="#f6f6f6">	

				<Button
					Name="ok"
					Classes="Primary"
					Padding="31,4"
					Canvas.Top="8"
					Canvas.Left="580"
					Content="Ok"
					Command="{Binding  Path=Close}"/>

			</Canvas>
			
		</StackPanel>
    </UserControl>
		
</Window>


<!--

							<TextBox.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Копировать    (Ctrl+C)" Command="{Binding $parent[TextBox].Copy}" IsEnabled="{Binding $parent[TextBox].CanCopy}"/>
								</ContextMenu>
							</TextBox.ContextMenu>







							<SelectableTextBlock.ContextMenu>
								<ContextMenu>
									<MenuItem Header="Копировать"/>
								</ContextMenu>
							</SelectableTextBlock.ContextMenu>
							
							
							
														<SelectableTextBlock.ContextFlyout>
								<ContextFlyout x:Key="DefaultTextBoxContextFlyout" Placement="Bottom">
									<MenuItem x:Name="TextBoxContextFlyoutCutItem" Header="Cut" Command="{Binding $parent[SelectableTextBlock].Cut}" IsEnabled="{Binding $parent[SelectableTextBlock].CanCut}" InputGesture="{x:Static SelectableTextBlock.CutGesture}" />
									<MenuItem x:Name="TextBoxContextFlyoutCopyItem" Header="Copy" Command="{Binding $parent[SelectableTextBlock].Copy}" IsEnabled="{Binding $parent[SelectableTextBlock].CanCopy}" InputGesture="{x:Static SelectableTextBlock.CopyGesture}"/>
									<MenuItem x:Name="TextBoxContextFlyoutPasteItem" Header="Paste" Command="{Binding $parent[SelectableTextBlock].Paste}" IsEnabled="{Binding $parent[SelectableTextBlock].CanPaste}" InputGesture="{x:Static SelectableTextBlock.PasteGesture}"/>
								</ContextFlyout>
							</SelectableTextBlock.ContextFlyout>

-->